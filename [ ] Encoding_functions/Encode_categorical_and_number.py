def encode_categorial(name_scaler, scaler, data, y=None, return_scaler=False):
    """
    Кодирует категориальные колонки в датасете с использованием указанного кодировщика.
    """
    if name_scaler != 'TargetEncoder':
        if not return_scaler:
            return data[categorical_cols].apply(lambda x: scaler.fit_transform(x.astype(str)))
        else:
            return data[categorical_cols].apply(lambda x: scaler.fit_transform(x.astype(str))), scaler
    else:
        if not return_scaler:
            return scaler.fit_transform(data[categorical_cols], y)
        else:
            return scaler.fit_transform(data[categorical_cols], y), scaler

def encode_number(name_scaler, scaler, data, return_scaler=False):
    """
    Применяет указанный кодировщик к числовым колонкам в датасете.
    """
    if name_scaler == 'Not scaled':
        if not return_scaler:
            return data
        else:
            return data, scaler
    else:
        if not return_scaler:
            return scaler.fit_transform(data)
        else:
            return scaler.fit_transform(data), scaler



'''
Функция encode_categorial() предназначена для кодирования категориальных переменных в наборе данных. В зависимости от выбранного метода кодирования, функция адаптирует данные к требованиям специфического алгоритма:

Параметры функции:
name_scaler — имя используемого метода кодирования;
scaler — инстанс кодировщика, который применяется к данным;
data — набор данных, содержащий категориальные данные, которые необходимо закодировать;
y — целевая переменная, которая может потребоваться для некоторых методов кодирования, как например TargetEncoder;
return_scaler — логический флаг, указывающий, следует ли возвращать сам объект кодировщика вместе с преобразованными данными.

Если метод кодирования не является TargetEncoder, то функция применяет выбранный кодировщик к каждому столбцу в data[categorical_cols Это может быть LabelEncoder или другой подобный кодировщик, который трансформирует каждую категорию в уникальное числовое значение.
В случае использования TargetEncoder, функция использует как признаки, так и целевую переменную y для генерации числовых представлений категорий, основываясь на среднем значении целевой переменной для каждой категории.


Функция encode_number() применяется для масштабирования числовых данных. Это позволяет привести различные числовые переменные к общему масштабу, что часто требуется для оптимизации процесса обучения моделей машинного обучения.

Параметры функции:
name_scaler — имя масштабировщика, указывающее на метод масштабирования;
scaler — объект масштабировщика, например, StandardScaler или MinMaxScaler;
data — датафрейм с числовыми данными для масштабирования;
return_scaler — определяет, нужно ли возвращать объект масштабировщика вместе с данными.
Если name_scaler установлен в 'Not scaled', данные возвращаются без изменений, что может быть полезно, если исходные масштабы данных уже оптимальны.

Для других масштабировщиков (StandardScaler, MinMaxScaler и др.), функция применяет fit_transform(), который адаптирует данные, вычисляя параметры масштабирования (например, среднее и стандартное отклонение для StandardScaler) и применяя их к данным.
Использование метода fit_transform() позволяет выполнить обучение и трансформацию в одном вызове, что обычно более эффективно и удобно при работе с обучающими данными. Это обеспечивает, что трансформация данных будет выполнена точно так же, как и предполагалось при их обучении, что важно для согласованности и точности модели машинного обучения.
Обе эти функции обеспечивают фундаментальные шаги в подготовке данных для обучения, позволяя адаптировать как категориальные, так и числовые переменные к требованиям конкретных алгоритмов машинного обучения.
'''





